name: Snyk Code Scan for OWASP Juice Shop PR Changes

on:
  pull_request:
    branches:
      - master
    types:
      - opened      # Trigger on PR creation
      - synchronize # Trigger on PR updates
      - reopened    # Trigger if PR is reopened

jobs:
  snyk_code_scan:
    runs-on: ubuntu-latest
    
    steps:
      # Checkout the repository with full history
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Fetch full history to compare changes

      # Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      # Install Snyk CLI
      - name: Install Snyk
        run: npm install -g snyk@latest

      # Get changed files in the PR
      - name: Get Changed Files
        id: changed_files
        run: |
          git fetch origin master
          CHANGED_FILES=$(git diff --name-only origin/master...HEAD | tr '\n' ' ' || true)
          echo "Changed files: $CHANGED_FILES"  # Debug output
          echo "files=$CHANGED_FILES" >> "$GITHUB_OUTPUT"

      # Run Snyk code scan on changed JavaScript files only
      - name: Snyk Code Scan
        id: snyk_code_scan
        env:
          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
        run: |
          CHANGED_FILES="${{ steps.changed_files.outputs.files }}"
          echo "Scanning changed files: $CHANGED_FILES"
          if [ -n "$CHANGED_FILES" ]; then
            TOTAL_VULN=0
            for FILE in $CHANGED_FILES; do
              if [[ "$FILE" == *.js ]]; then  # Only scan JavaScript files for code vulnerabilities
                echo "Scanning file: $FILE"
                snyk code test --file="$FILE" --json > "snyk-code-report-${FILE//\//_}.json" || true
                if [ -s "snyk-code-report-${FILE//\//_}.json" ]; then
                  # Check if the JSON is valid before parsing with jq
                  if jq -e . > /dev/null 2>&1 < "snyk-code-report-${FILE//\//_}.json"; then
                    VULN_COUNT=$(jq '.runs[0].results | length' "snyk-code-report-${FILE//\//_}.json")
                    echo "Vulnerabilities in $FILE: $VULN_COUNT"
                    echo "Snyk Code Report Content: $(cat snyk-code-report-${FILE//\//_}.json || echo 'Empty or invalid')"
                    TOTAL_VULN=$((TOTAL_VULN + VULN_COUNT))
                  fi
                fi
              fi
            done
            echo "code_vuln_count=$TOTAL_VULN" >> $GITHUB_OUTPUT
          else
            echo "code_vuln_count=0" >> $GITHUB_OUTPUT
          fi

      # Generate comment based on scan results for changed JavaScript files only
      - name: Generate Scan Comment
        id: comment
        run: |
          COMMENT="## Snyk Code Scan Results for OWASP Juice Shop PR Changes\n\n"
          
          CHANGED_FILES="${{ steps.changed_files.outputs.files }}"
          if [ -n "$CHANGED_FILES" ]; then
            VULN_FOUND=false
            for FILE in $CHANGED_FILES; do
              if [[ "$FILE" == *.js ]]; then  # Only consider JavaScript files
                REPORT_FILE="snyk-code-report-${FILE//\//_}.json"
                if [ -s "$REPORT_FILE" ] && jq -e . > /dev/null 2>&1 < "$REPORT_FILE"; then
                  VULN_COUNT=$(jq '.runs[0].results | length' "$REPORT_FILE")
                  if [ "$VULN_COUNT" -gt 0 ]; then
                    VULN_FOUND=true
                    COMMENT="$COMMENT### Vulnerabilities in $FILE\nFound $VULN_COUNT potential vulnerabilities in this file.\nCheck the snyk-code-report-${FILE//\//_}.json artifact for details.\n\n"
                  fi
                fi
              fi
            done
            if [ "$VULN_FOUND" = false ]; then
              COMMENT="$COMMENT### Code Vulnerabilities\nNo vulnerabilities found in changed JavaScript code.\n"
            fi
          else
            COMMENT="$COMMENT### Code Vulnerabilities\nNo changed files detected in this PR.\n"
          fi
          
          COMMENT="$COMMENT*Note: OWASP Juice Shop is intentionally vulnerable - some findings may be expected.*"
          
          echo "body<<EOF" >> $GITHUB_OUTPUT
          echo "$COMMENT" >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      # Post comment to PR
      - name: Comment on PR
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const comment = `${{ steps.comment.outputs.body }}`;
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.payload.pull_request.number,
              body: comment
            });

      # Upload scan reports as artifacts
      - name: Upload Snyk Code Report
        uses: actions/upload-artifact@v4
        with:
          name: snyk-code-report
          path: snyk-code-report-*.json
